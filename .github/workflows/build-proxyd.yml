name: Build and Push Proxyd Docker Image

on:
  push:
    branches:
      - main
    paths:
      - 'external/ethereum-optimism-infra/**'
      - '.github/workflows/build-proxyd.yml'
      - 'Dockerfile.proxyd'
  pull_request:
    branches:
      - main
    paths:
      - 'external/ethereum-optimism-infra/**'
      - '.github/workflows/build-proxyd.yml'
      - 'Dockerfile.proxyd'
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build even without changes'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/proxyd

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Get proxyd version from submodule
        id: proxyd-version
        run: |
          cd external/ethereum-optimism-infra
          # Get the current tag or commit
          PROXYD_TAG=$(git describe --tags --exact-match 2>/dev/null || echo "")
          if [[ $PROXYD_TAG == proxyd/* ]]; then
            PROXYD_VERSION=${PROXYD_TAG#proxyd/}
          else
            PROXYD_VERSION=$(git rev-parse --short HEAD)
          fi
          echo "version=${PROXYD_VERSION}" >> $GITHUB_OUTPUT
          echo "Proxyd version: ${PROXYD_VERSION}"
          
          # Get git info for build args
          GITCOMMIT=$(git rev-parse HEAD)
          GITDATE=$(git show -s --format=%cI HEAD)
          echo "gitcommit=${GITCOMMIT}" >> $GITHUB_OUTPUT
          echo "gitdate=${GITDATE}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ steps.proxyd-version.outputs.version }}
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=proxyd
            org.opencontainers.image.description=Ethereum JSON-RPC proxy with load balancing and caching
            org.opencontainers.image.vendor=optimism
            org.opencontainers.image.version=${{ steps.proxyd-version.outputs.version }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.proxyd
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GITCOMMIT=${{ steps.proxyd-version.outputs.gitcommit }}
            GITDATE=${{ steps.proxyd-version.outputs.gitdate }}
            GITVERSION=${{ steps.proxyd-version.outputs.version }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        if: github.event_name != 'pull_request'
        continue-on-error: true
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true